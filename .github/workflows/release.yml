on:
  push:
    tags:
    - "v*.*.*"
name: Release
jobs:
  release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [ linux, windows, darwin ]
        goarch: [ 386, arm64, amd64 ]
        exclude:
        - goarch: "386"
          goos: darwin
    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18.x
    - name: Checkout the latest code
      uses: actions/checkout@v3
    - name: Cache
      uses: actions/cache@v3
      with:
        path: |
          ~/go/pkg/mod
          ~/.cache/go-build
          ~/Library/Caches/go-build
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - name: Build ${{ matrix.goos }}/${{ matrix.goarch }}
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      shell: bash
      run: |
        VERSION="$(git describe --tags | cut -d '-' -f1 | cut -d 'v' -f2)"
        LDFLAGS="-X github.com/wandera/feature-instance-tools/cmd.Version=${VERSION}"
        if [ "$GOOS" = "windows" ]; then
          go build -ldflags "${LDFLAGS}" -v -o dist/fictl.exe && tar -czvf fictl-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -C dist/ .
        else
          CGO_ENABLED=0 go build -ldflags "${LDFLAGS}" -v -o dist/fictl && tar -czvf fictl-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz -C dist/ .
        fi
    # RELEASE BIN
    - name: Release
      uses: wandera/action-gh-release@v1
      with:
        files: fictl-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz
    # BUILD DOCKER IMAGE
    # PUSH DOCKER IMAGE 
  homebrew:
    runs-on: ubuntu-latest
    needs: release
    steps:
    - name: Bump Homebrew formula
      uses: wandera/bump-homebrew-formula-action@v1
      env:
        COMMITTER_TOKEN: ${{ secrets.BREW_TOKEN }}
      with:
        formula-name: fictl
        download-url: git@github.com:wandera/feature-instance-tools.git
        homebrew-tap: wandera/homebrew-wandera
